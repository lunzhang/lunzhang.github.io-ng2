"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var griditem_1 = require('../griditem/griditem');
var NgWidget = (function (_super) {
    __extends(NgWidget, _super);
    function NgWidget(componentFactoryResolver) {
        _super.call(this);
        this.componentFactoryResolver = componentFactoryResolver;
        this.style = {
            'position': 'absolute',
            'overflow': 'hidden',
            'cursor': 'auto'
        };
        this.resizeStyle = {
            'position': 'absolute',
            'cursor': 'nwse-resize'
        };
        this.headerStyle = {
            'width': '100%',
            'position': 'relative',
            'cursor': 'move'
        };
        this.contentStyle = {
            'position': 'relative',
            'overflow': 'auto'
        };
        this.isDrag = false;
        this.isResize = false;
        this.mousePoint = {};
        this.onActivateWidget = new core_1.EventEmitter();
        this.onClose = new core_1.EventEmitter();
    }
    NgWidget.prototype.ngOnInit = function () {
        this.calcPosition();
        this.calcSize();
    };
    NgWidget.prototype.onMouseDown = function (e) {
        if (e.srcElement == this.header.nativeElement || e.srcElement.parentElement == this.header.nativeElement) {
            this.isDrag = true;
            this.mousePoint.x = e.clientX;
            this.mousePoint.y = e.clientY;
            this.onActivateWidget.emit(this);
        }
        else if (e.srcElement == this.resizer.nativeElement) {
            this.isResize = true;
            this.mousePoint.x = e.clientX;
            this.mousePoint.y = e.clientY;
            this.onActivateWidget.emit(this);
        }
        this.style['z-index'] = '1';
    };
    NgWidget.prototype.onMouseMove = function (e) {
    };
    NgWidget.prototype.reset = function () {
        this.style['z-index'] = 'auto';
        this.isDrag = false;
        this.isResize = false;
    };
    NgWidget.prototype.ngOnChanges = function (changes) {
        if (changes.content && changes.content.currentValue) {
            this.target.clear();
            var factory = this.componentFactoryResolver.resolveComponentFactory(this.content);
            this.target.createComponent(factory);
        }
    };
    NgWidget.prototype.close = function () {
        this.onClose.emit(this);
    };
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "onActivateWidget", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "onClose", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "content", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "position", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "gridConfig", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "id", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "widgetTitle", void 0);
    __decorate([
        core_1.ViewChild('header'), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "header", void 0);
    __decorate([
        core_1.ViewChild('resizer'), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "resizer", void 0);
    __decorate([
        core_1.ViewChild('target', { read: core_1.ViewContainerRef }), 
        __metadata('design:type', core_1.ViewContainerRef)
    ], NgWidget.prototype, "target", void 0);
    __decorate([
        core_1.HostListener('mousedown', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], NgWidget.prototype, "onMouseDown", null);
    __decorate([
        core_1.HostListener('mousemove', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], NgWidget.prototype, "onMouseMove", null);
    NgWidget = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'widget',
            template: '<div [ngStyle]="style" [id]="id" class="widget">' +
                '<div [ngStyle]="headerStyle" #header class="widget-header"><div class="widget-header-title">{{widgetTitle}}</div><div class="widget-header-option"><button (click)="close()">X</button></div></div>' +
                '<div [ngStyle]="contentStyle" class="widget-content"><div #target></div> </div>' +
                '<div [ngStyle]="resizeStyle" #resizer class="widget-resize"></div> </div>',
            styleUrls: ['./widget.css']
        }), 
        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver])
    ], NgWidget);
    return NgWidget;
}(griditem_1.GridItem));
exports.NgWidget = NgWidget;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUEyRTtZQUMzRSxTQUFTLEVBQUMsQ0FBQyxjQUFjLENBQUM7U0FDM0IsQ0FBQzs7Z0JBQUE7SUFvRkYsZUFBQztBQUFELENBbkZBLEFBbUZDLENBbkY2QixtQkFBUSxHQW1GckM7QUFuRlksZ0JBQVEsV0FtRnBCLENBQUEiLCJmaWxlIjoid2lkZ2V0L3dpZGdldC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCxIb3N0TGlzdGVuZXIsSG9zdEJpbmRpbmcsT3V0cHV0LElucHV0LE9uSW5pdCxWaWV3Q2hpbGQsRXZlbnRFbWl0dGVyLENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixBZnRlclZpZXdJbml0LFZpZXdDb250YWluZXJSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBHcmlkSXRlbSB9IGZyb20gJy4uL2dyaWRpdGVtL2dyaWRpdGVtJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIG1vZHVsZUlkOiBtb2R1bGUuaWQsXHJcbiAgc2VsZWN0b3I6ICd3aWRnZXQnLFxyXG4gIHRlbXBsYXRlOiAnPGRpdiBbbmdTdHlsZV09XCJzdHlsZVwiIFtpZF09XCJpZFwiIGNsYXNzPVwid2lkZ2V0XCI+JytcclxuICAnPGRpdiBbbmdTdHlsZV09XCJoZWFkZXJTdHlsZVwiICNoZWFkZXIgY2xhc3M9XCJ3aWRnZXQtaGVhZGVyXCI+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkZXItdGl0bGVcIj57e3dpZGdldFRpdGxlfX08L2Rpdj48ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWRlci1vcHRpb25cIj48YnV0dG9uIChjbGljayk9XCJjbG9zZSgpXCI+WDwvYnV0dG9uPjwvZGl2PjwvZGl2PicrXHJcbiAgJzxkaXYgW25nU3R5bGVdPVwiY29udGVudFN0eWxlXCIgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPjxkaXYgI3RhcmdldD48L2Rpdj4gPC9kaXY+JytcclxuICAnPGRpdiBbbmdTdHlsZV09XCJyZXNpemVTdHlsZVwiICNyZXNpemVyIGNsYXNzPVwid2lkZ2V0LXJlc2l6ZVwiPjwvZGl2PiA8L2Rpdj4nLFxyXG4gIHN0eWxlVXJsczpbJy4vd2lkZ2V0LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ1dpZGdldCBleHRlbmRzIEdyaWRJdGVtIHtcclxuXHJcbiAgcHVibGljIHN0eWxlOmFueT17XHJcbiAgICAgICdwb3NpdGlvbic6J2Fic29sdXRlJyxcclxuICAgICAgJ292ZXJmbG93JzonaGlkZGVuJyxcclxuICAgICAgJ2N1cnNvcic6J2F1dG8nXHJcbiAgfTtcclxuICBwdWJsaWMgcmVzaXplU3R5bGU9e1xyXG4gICAgJ3Bvc2l0aW9uJzonYWJzb2x1dGUnLFxyXG4gICAgJ2N1cnNvcic6J253c2UtcmVzaXplJ1xyXG4gIH07XHJcbiAgcHVibGljIGhlYWRlclN0eWxlPXtcclxuICAgICd3aWR0aCc6ICcxMDAlJyxcclxuICAgICdwb3NpdGlvbic6J3JlbGF0aXZlJyxcclxuICAgICdjdXJzb3InOidtb3ZlJ1xyXG4gIH07XHJcbiAgcHVibGljIGNvbnRlbnRTdHlsZT17XHJcbiAgICAncG9zaXRpb24nOidyZWxhdGl2ZScsXHJcbiAgICAnb3ZlcmZsb3cnOidhdXRvJ1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBpc0RyYWc6Ym9vbGVhbj1mYWxzZTtcclxuICBwdWJsaWMgaXNSZXNpemU6Ym9vbGVhbj1mYWxzZTtcclxuICBwdWJsaWMgbW91c2VQb2ludDphbnk9IHt9O1xyXG5cclxuICBAT3V0cHV0KCkgb25BY3RpdmF0ZVdpZGdldCA9IG5ldyBFdmVudEVtaXR0ZXI8TmdXaWRnZXQ+KCk7XHJcbiAgQE91dHB1dCgpIG9uQ2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPE5nV2lkZ2V0PigpO1xyXG4gIEBJbnB1dCgpIGNvbnRlbnQ7XHJcbiAgQElucHV0KCkgcG9zaXRpb247XHJcbiAgQElucHV0KCkgZ3JpZENvbmZpZztcclxuICBASW5wdXQoKSBpZDtcclxuICBASW5wdXQoKSB3aWRnZXRUaXRsZTtcclxuXHJcbiAgQFZpZXdDaGlsZCgnaGVhZGVyJykgaGVhZGVyO1xyXG4gIEBWaWV3Q2hpbGQoJ3Jlc2l6ZXInKSByZXNpemVyO1xyXG4gIEBWaWV3Q2hpbGQoJ3RhcmdldCcsIHtyZWFkOiBWaWV3Q29udGFpbmVyUmVmfSkgdGFyZ2V0OiBWaWV3Q29udGFpbmVyUmVmO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyKXtcclxuICAgIHN1cGVyKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpe1xyXG4gICAgICB0aGlzLmNhbGNQb3NpdGlvbigpO1xyXG4gICAgICB0aGlzLmNhbGNTaXplKCk7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdtb3VzZWRvd24nLCBbJyRldmVudCddKVxyXG4gIG9uTW91c2VEb3duKGUpe1xyXG4gICAgaWYoZS5zcmNFbGVtZW50ID09IHRoaXMuaGVhZGVyLm5hdGl2ZUVsZW1lbnQgfHwgZS5zcmNFbGVtZW50LnBhcmVudEVsZW1lbnQgPT0gdGhpcy5oZWFkZXIubmF0aXZlRWxlbWVudCl7XHJcbiAgICAgICAgdGhpcy5pc0RyYWcgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubW91c2VQb2ludC54ID0gZS5jbGllbnRYO1xyXG4gICAgICAgIHRoaXMubW91c2VQb2ludC55ID0gZS5jbGllbnRZO1xyXG4gICAgICAgIHRoaXMub25BY3RpdmF0ZVdpZGdldC5lbWl0KHRoaXMpO1xyXG4gICAgfSBlbHNlIGlmKGUuc3JjRWxlbWVudCA9PSB0aGlzLnJlc2l6ZXIubmF0aXZlRWxlbWVudCl7XHJcbiAgICAgICAgdGhpcy5pc1Jlc2l6ZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5tb3VzZVBvaW50LnggPSBlLmNsaWVudFg7XHJcbiAgICAgICAgdGhpcy5tb3VzZVBvaW50LnkgPSBlLmNsaWVudFk7XHJcbiAgICAgICAgdGhpcy5vbkFjdGl2YXRlV2lkZ2V0LmVtaXQodGhpcyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnN0eWxlWyd6LWluZGV4J10gPSAnMSc7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdtb3VzZW1vdmUnLCBbJyRldmVudCddKVxyXG4gIG9uTW91c2VNb3ZlKGUpe1xyXG4gIH1cclxuXHJcbiAgcmVzZXQoKXtcclxuICAgIHRoaXMuc3R5bGVbJ3otaW5kZXgnXSA9ICdhdXRvJztcclxuICAgIHRoaXMuaXNEcmFnID0gZmFsc2U7XHJcbiAgICB0aGlzLmlzUmVzaXplID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzKXtcclxuICAgIGlmKGNoYW5nZXMuY29udGVudCAmJiBjaGFuZ2VzLmNvbnRlbnQuY3VycmVudFZhbHVlKXtcclxuICAgICAgdGhpcy50YXJnZXQuY2xlYXIoKTtcclxuICAgICAgbGV0IGZhY3RvcnkgPSB0aGlzLmNvbXBvbmVudEZhY3RvcnlSZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeSh0aGlzLmNvbnRlbnQpO1xyXG4gICAgICB0aGlzLnRhcmdldC5jcmVhdGVDb21wb25lbnQoZmFjdG9yeSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpe1xyXG4gICAgdGhpcy5vbkNsb3NlLmVtaXQodGhpcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
