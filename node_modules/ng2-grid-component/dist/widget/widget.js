"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var griditem_1 = require('../griditem/griditem');
var NgWidget = (function (_super) {
    __extends(NgWidget, _super);
    function NgWidget(componentFactoryResolver) {
        _super.call(this);
        this.componentFactoryResolver = componentFactoryResolver;
        this.style = {
            'position': 'absolute',
            'overflow': 'hidden',
            'cursor': 'auto'
        };
        this.resizeStyle = {
            'position': 'absolute',
            'cursor': 'nwse-resize'
        };
        this.headerStyle = {
            'width': '100%',
            'position': 'relative',
            'cursor': 'move'
        };
        this.contentStyle = {
            'position': 'relative',
            'overflow': 'auto'
        };
        this.isDrag = false;
        this.isResize = false;
        this.mousePoint = {};
        this.onActivateWidget = new core_1.EventEmitter();
        this.onClose = new core_1.EventEmitter();
    }
    NgWidget.prototype.ngOnInit = function () {
        this.calcPosition();
        this.calcSize();
    };
    NgWidget.prototype.onMouseDown = function (e) {
        if (e.srcElement == this.header.nativeElement || e.srcElement.parentElement == this.header.nativeElement) {
            this.isDrag = true;
            this.mousePoint.x = e.clientX;
            this.mousePoint.y = e.clientY;
            this.onActivateWidget.emit(this);
        }
        else if (e.srcElement == this.resizer.nativeElement) {
            this.isResize = true;
            this.mousePoint.x = e.clientX;
            this.mousePoint.y = e.clientY;
            this.onActivateWidget.emit(this);
        }
        this.style['z-index'] = '1';
    };
    NgWidget.prototype.onMouseMove = function (e) {
    };
    NgWidget.prototype.reset = function () {
        this.style['z-index'] = 'auto';
        this.isDrag = false;
        this.isResize = false;
    };
    NgWidget.prototype.ngOnChanges = function (changes) {
        if (changes.content && changes.content.currentValue) {
            this.target.clear();
            var factory = this.componentFactoryResolver.resolveComponentFactory(this.content);
            this.target.createComponent(factory);
        }
    };
    NgWidget.prototype.close = function () {
        this.onClose.emit(this);
    };
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "onActivateWidget", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "onClose", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "content", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "position", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "gridConfig", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "id", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "widgetTitle", void 0);
    __decorate([
        core_1.ViewChild('header'), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "header", void 0);
    __decorate([
        core_1.ViewChild('resizer'), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "resizer", void 0);
    __decorate([
        core_1.ViewChild('target', { read: core_1.ViewContainerRef }), 
        __metadata('design:type', core_1.ViewContainerRef)
    ], NgWidget.prototype, "target", void 0);
    __decorate([
        core_1.HostListener('mousedown', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], NgWidget.prototype, "onMouseDown", null);
    __decorate([
        core_1.HostListener('mousemove', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], NgWidget.prototype, "onMouseMove", null);
    NgWidget = __decorate([
        core_1.Component({selector: 'widget',
            template: "<div [ngStyle]=\"style\" [id]=\"id\" class=\"widget\"> <div [ngStyle]=\"headerStyle\" #header class=\"widget-header\"> <div class=\"widget-header-title\">{{widgetTitle}}</div> <div class=\"widget-header-option\"> <button (click)=\"close()\">X</button> </div> </div> <div [ngStyle]=\"contentStyle\" class=\"widget-content\"> <div #target></div> </div> <div [ngStyle]=\"resizeStyle\" #resizer class=\"widget-resize\"></div> </div> ",
            styles: [".widget-header-title{height:49px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.widget-header-option{vertical-align:top;display:inline-block}.widget-resize{width:20px;height:20px;bottom:0;right:0}.widget-header{height:50px}.widget-content{height:calc(100% - 70px);margin:10px 0 10px 10px}.widget-header-title{float:left;padding:16px 10px 17px;display:inline-block;width:calc(100% - 43px)}.widget-header-option button{border:none;height:49px;width:43px;cursor:hand}.widget-header-option button:focus{outline:0}:host-context(.dark) .widget{background-color:#121212;border:1px solid #ad2828;color:#fff}:host-context(.dark) .widget-resize{background:repeating-linear-gradient(45deg,#171717,#171717 5px,#ad2828 5px,#ad2828 6px)}:host-context(.dark) .widget-header{border-bottom:1px solid #ad2828}:host-context(.dark) .widget-header-title{border-right:1px solid #ad2828}:host-context(.dark) .widget-header-option button{background-color:#121212;color:#fff}:host-context(.light) .widget{background-color:#fff;border:1px solid #a7a9ad;color:#000}:host-context(.light) .widget-resize{background:repeating-linear-gradient(45deg,#fff,#fff 5px,#a7a9ad 5px,#a7a9ad 6px)}:host-context(.light) .widget-header{border-bottom:1px solid #a7a9ad}:host-context(.light) .widget-header-title{border-right:1px solid #a7a9ad}:host-context(.light) .widget-header-option button{background-color:#fff}:host-context(.sky) .widget{background-color:#5c94bf;border:1px solid #fff;color:#fff}:host-context(.sky) .widget-resize{background:repeating-linear-gradient(45deg,#5c94bf,#5c94bf 5px,#fff 5px,#fff 6px)}:host-context(.sky) .widget-header{border-bottom:1px solid #fff}:host-context(.sky) .widget-header-title{border-right:1px solid #fff}:host-context(.sky) .widget-header-option button{background-color:#5c94bf;color:#fff}"]
        }), 
        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver])
    ], NgWidget);
    return NgWidget;
}(griditem_1.GridItem));
exports.NgWidget = NgWidget;

//# sourceMappingURL=widget.js.map
