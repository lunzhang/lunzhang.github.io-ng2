"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var griditem_1 = require('../griditem/griditem');
var NgWidget = (function (_super) {
    __extends(NgWidget, _super);
    function NgWidget(componentFactoryResolver) {
        _super.call(this);
        this.componentFactoryResolver = componentFactoryResolver;
        this.style = {
            'position': 'absolute',
            'overflow': 'hidden',
            'cursor': 'auto'
        };
        this.resizeStyle = {
            'position': 'absolute',
            'cursor': 'nwse-resize'
        };
        this.headerStyle = {
            'width': '100%',
            'position': 'relative',
            'cursor': 'move'
        };
        this.contentStyle = {
            'position': 'relative',
            'overflow': 'auto'
        };
        this.isDrag = false;
        this.isResize = false;
        this.mousePoint = {};
        this.onActivateWidget = new core_1.EventEmitter();
        this.onClose = new core_1.EventEmitter();
    }
    NgWidget.prototype.ngOnInit = function () {
        this.calcPosition();
        this.calcSize();
    };
    NgWidget.prototype.onMouseDown = function (e) {
        if (e.srcElement == this.header.nativeElement || e.srcElement.parentElement == this.header.nativeElement) {
            this.isDrag = true;
            this.mousePoint.x = e.clientX;
            this.mousePoint.y = e.clientY;
            this.onActivateWidget.emit(this);
        }
        else if (e.srcElement == this.resizer.nativeElement) {
            this.isResize = true;
            this.mousePoint.x = e.clientX;
            this.mousePoint.y = e.clientY;
            this.onActivateWidget.emit(this);
        }
        this.style['z-index'] = '1';
    };
    NgWidget.prototype.onMouseMove = function (e) {
    };
    NgWidget.prototype.reset = function () {
        this.style['z-index'] = 'auto';
        this.isDrag = false;
        this.isResize = false;
    };
    NgWidget.prototype.ngOnChanges = function (changes) {
        if (changes.content.currentValue) {
            this.target.clear();
            var factory = this.componentFactoryResolver.resolveComponentFactory(this.content);
            this.target.createComponent(factory);
        }
    };
    NgWidget.prototype.close = function () {
        this.onClose.emit(this);
    };
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "onActivateWidget", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "onClose", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "content", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "position", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "gridConfig", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "id", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "widgetTitle", void 0);
    __decorate([
        core_1.ViewChild('header'), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "header", void 0);
    __decorate([
        core_1.ViewChild('resizer'), 
        __metadata('design:type', Object)
    ], NgWidget.prototype, "resizer", void 0);
    __decorate([
        core_1.ViewChild('target', { read: core_1.ViewContainerRef }), 
        __metadata('design:type', core_1.ViewContainerRef)
    ], NgWidget.prototype, "target", void 0);
    __decorate([
        core_1.HostListener('mousedown', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], NgWidget.prototype, "onMouseDown", null);
    __decorate([
        core_1.HostListener('mousemove', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], NgWidget.prototype, "onMouseMove", null);
    NgWidget = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'widget',
            template: '<div [ngStyle]="style" [id]="id" class="widget">' +
                '<div [ngStyle]="headerStyle" #header class="widget-header"><div class="widget-header-title">{{widgetTitle}}</div><div class="widget-header-option"><button (click)="close()">X</button></div></div>' +
                '<div [ngStyle]="contentStyle" class="widget-content"><div #target></div> </div>' +
                '<div [ngStyle]="resizeStyle" #resizer class="widget-resize"></div> </div>',
            styleUrls: ['./widget.css']
        }), 
        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver])
    ], NgWidget);
    return NgWidget;
}(griditem_1.GridItem));
exports.NgWidget = NgWidget;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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LENBQUMsY0FBYyxDQUFDO1NBQzNCLENBQUM7O2dCQUFBO0lBb0ZGLGVBQUM7QUFBRCxDQW5GQSxBQW1GQyxDQW5GNkIsbUJBQVEsR0FtRnJDO0FBbkZZLGdCQUFRLFdBbUZwQixDQUFBIiwiZmlsZSI6IndpZGdldC93aWRnZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsSG9zdExpc3RlbmVyLEhvc3RCaW5kaW5nLE91dHB1dCxJbnB1dCxPbkluaXQsVmlld0NoaWxkLEV2ZW50RW1pdHRlcixDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsQWZ0ZXJWaWV3SW5pdCxWaWV3Q29udGFpbmVyUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgR3JpZEl0ZW0gfSBmcm9tICcuLi9ncmlkaXRlbS9ncmlkaXRlbSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBtb2R1bGVJZDogbW9kdWxlLmlkLFxyXG4gIHNlbGVjdG9yOiAnd2lkZ2V0JyxcclxuICB0ZW1wbGF0ZTogJzxkaXYgW25nU3R5bGVdPVwic3R5bGVcIiBbaWRdPVwiaWRcIiBjbGFzcz1cIndpZGdldFwiPicrXHJcbiAgJzxkaXYgW25nU3R5bGVdPVwiaGVhZGVyU3R5bGVcIiAjaGVhZGVyIGNsYXNzPVwid2lkZ2V0LWhlYWRlclwiPjxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZGVyLXRpdGxlXCI+e3t3aWRnZXRUaXRsZX19PC9kaXY+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkZXItb3B0aW9uXCI+PGJ1dHRvbiAoY2xpY2spPVwiY2xvc2UoKVwiPlg8L2J1dHRvbj48L2Rpdj48L2Rpdj4nK1xyXG4gICc8ZGl2IFtuZ1N0eWxlXT1cImNvbnRlbnRTdHlsZVwiIGNsYXNzPVwid2lkZ2V0LWNvbnRlbnRcIj48ZGl2ICN0YXJnZXQ+PC9kaXY+IDwvZGl2PicrXHJcbiAgJzxkaXYgW25nU3R5bGVdPVwicmVzaXplU3R5bGVcIiAjcmVzaXplciBjbGFzcz1cIndpZGdldC1yZXNpemVcIj48L2Rpdj4gPC9kaXY+JyxcclxuICBzdHlsZVVybHM6WycuL3dpZGdldC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdXaWRnZXQgZXh0ZW5kcyBHcmlkSXRlbSB7XHJcblxyXG4gIHB1YmxpYyBzdHlsZTphbnk9e1xyXG4gICAgICAncG9zaXRpb24nOidhYnNvbHV0ZScsXHJcbiAgICAgICdvdmVyZmxvdyc6J2hpZGRlbicsXHJcbiAgICAgICdjdXJzb3InOidhdXRvJ1xyXG4gIH07XHJcbiAgcHVibGljIHJlc2l6ZVN0eWxlPXtcclxuICAgICdwb3NpdGlvbic6J2Fic29sdXRlJyxcclxuICAgICdjdXJzb3InOidud3NlLXJlc2l6ZSdcclxuICB9O1xyXG4gIHB1YmxpYyBoZWFkZXJTdHlsZT17XHJcbiAgICAnd2lkdGgnOiAnMTAwJScsXHJcbiAgICAncG9zaXRpb24nOidyZWxhdGl2ZScsXHJcbiAgICAnY3Vyc29yJzonbW92ZSdcclxuICB9O1xyXG4gIHB1YmxpYyBjb250ZW50U3R5bGU9e1xyXG4gICAgJ3Bvc2l0aW9uJzoncmVsYXRpdmUnLFxyXG4gICAgJ292ZXJmbG93JzonYXV0bydcclxuICB9O1xyXG5cclxuICBwdWJsaWMgaXNEcmFnOmJvb2xlYW49ZmFsc2U7XHJcbiAgcHVibGljIGlzUmVzaXplOmJvb2xlYW49ZmFsc2U7XHJcbiAgcHVibGljIG1vdXNlUG9pbnQ6YW55PSB7fTtcclxuXHJcbiAgQE91dHB1dCgpIG9uQWN0aXZhdGVXaWRnZXQgPSBuZXcgRXZlbnRFbWl0dGVyPE5nV2lkZ2V0PigpO1xyXG4gIEBPdXRwdXQoKSBvbkNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxOZ1dpZGdldD4oKTtcclxuICBASW5wdXQoKSBjb250ZW50O1xyXG4gIEBJbnB1dCgpIHBvc2l0aW9uO1xyXG4gIEBJbnB1dCgpIGdyaWRDb25maWc7XHJcbiAgQElucHV0KCkgaWQ7XHJcbiAgQElucHV0KCkgd2lkZ2V0VGl0bGU7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2hlYWRlcicpIGhlYWRlcjtcclxuICBAVmlld0NoaWxkKCdyZXNpemVyJykgcmVzaXplcjtcclxuICBAVmlld0NoaWxkKCd0YXJnZXQnLCB7cmVhZDogVmlld0NvbnRhaW5lclJlZn0pIHRhcmdldDogVmlld0NvbnRhaW5lclJlZjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcil7XHJcbiAgICBzdXBlcigpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKXtcclxuICAgICAgdGhpcy5jYWxjUG9zaXRpb24oKTtcclxuICAgICAgdGhpcy5jYWxjU2l6ZSgpO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vkb3duJywgWyckZXZlbnQnXSlcclxuICBvbk1vdXNlRG93bihlKXtcclxuICAgIGlmKGUuc3JjRWxlbWVudCA9PSB0aGlzLmhlYWRlci5uYXRpdmVFbGVtZW50IHx8IGUuc3JjRWxlbWVudC5wYXJlbnRFbGVtZW50ID09IHRoaXMuaGVhZGVyLm5hdGl2ZUVsZW1lbnQpe1xyXG4gICAgICAgIHRoaXMuaXNEcmFnID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm1vdXNlUG9pbnQueCA9IGUuY2xpZW50WDtcclxuICAgICAgICB0aGlzLm1vdXNlUG9pbnQueSA9IGUuY2xpZW50WTtcclxuICAgICAgICB0aGlzLm9uQWN0aXZhdGVXaWRnZXQuZW1pdCh0aGlzKTtcclxuICAgIH0gZWxzZSBpZihlLnNyY0VsZW1lbnQgPT0gdGhpcy5yZXNpemVyLm5hdGl2ZUVsZW1lbnQpe1xyXG4gICAgICAgIHRoaXMuaXNSZXNpemUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubW91c2VQb2ludC54ID0gZS5jbGllbnRYO1xyXG4gICAgICAgIHRoaXMubW91c2VQb2ludC55ID0gZS5jbGllbnRZO1xyXG4gICAgICAgIHRoaXMub25BY3RpdmF0ZVdpZGdldC5lbWl0KHRoaXMpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zdHlsZVsnei1pbmRleCddID0gJzEnO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vtb3ZlJywgWyckZXZlbnQnXSlcclxuICBvbk1vdXNlTW92ZShlKXtcclxuICB9XHJcblxyXG4gIHJlc2V0KCl7XHJcbiAgICB0aGlzLnN0eWxlWyd6LWluZGV4J10gPSAnYXV0byc7XHJcbiAgICB0aGlzLmlzRHJhZyA9IGZhbHNlO1xyXG4gICAgdGhpcy5pc1Jlc2l6ZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlcyl7XHJcbiAgICBpZihjaGFuZ2VzLmNvbnRlbnQuY3VycmVudFZhbHVlKXtcclxuICAgICAgdGhpcy50YXJnZXQuY2xlYXIoKTtcclxuICAgICAgbGV0IGZhY3RvcnkgPSB0aGlzLmNvbXBvbmVudEZhY3RvcnlSZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeSh0aGlzLmNvbnRlbnQpO1xyXG4gICAgICB0aGlzLnRhcmdldC5jcmVhdGVDb21wb25lbnQoZmFjdG9yeSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpe1xyXG4gICAgdGhpcy5vbkNsb3NlLmVtaXQodGhpcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
